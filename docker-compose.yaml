version: "3.8"

services:
  traefik:
    image: traefik:v2.2.1
    restart: on-failure
    depends_on:
      - swagger-ui
      - api-gateway
    labels:
      - "traefik.http.routers.traefik.rule=Host(`traefik.localhost`)"
      - "traefik.http.services.traefik.loadbalancer.server.port=8080"
      - "traefik.docker.network=external-proxy"
    ports:
      - "80:80"
      - "443:443"
      #- "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.toml:/etc/traefik/traefik.toml:ro
      - ./traefik/log:/var/log:rw
    networks:
      - external-proxy
      - internal-proxy

  swagger-ui:
    image: swaggerapi/swagger-ui:v3.25.5
    restart: on-failure
    depends_on:
      - api-gateway
    labels:
      - "traefik.http.routers.swagger-ui.rule=Host(`localhost`) || Host(`swagger.localhost`)"
      - "traefik.http.services.swagger-ui.loadbalancer.server.port=8080"
    environment:
      - URLS=[{url:"/app/logging-api/openapi.yaml",name:"Logging API"},{url:"/app/products-api/openapi.yaml",name:"Products API"},{url:"/app/invoicing-api/openapi.yaml",name:"Invoicing API"},{url:"/app/orders-api/openapi.json",name:"Orders API"}]
    volumes:
      - ./specifications:/usr/share/nginx/html/app:ro
    networks:
      - internal-proxy

  api-gateway:
    image: quay.io/datawire/ambassador:0.86.1 # another version problem...
    command: --port 8080
    restart: on-failure
    depends_on:
      - invoicing-api
      - logging-api
      - orders-api
      - products-api
    labels: # https://medium.com/@utnas/microservices-architecture-using-traefik-reverse-proxy-and-ambassador-as-gateway-606a77d8f7c7
      - "traefik.http.routers.api-gateway.rule=Host(`api.localhost`)"
      - "traefik.http.services.api-gateway.loadbalancer.server.port=8080"
    environment:
      - AMBASSADOR_NO_KUBEWATCH=no_kubewatch
    volumes:
      - ./gateway-config:/ambassador/ambassador-config:ro
    networks:
      - internal-proxy

  invoicing-api:
    image: maanuelmm/prism:tini # custom image to avoid two bugs in two different versions
    command: mock -d -h 0.0.0.0 "/app/openapi.yaml"
    restart: on-failure # incredibly unreliable
    labels:
      - "traefik.enable=false"
    volumes:
      - ./specifications/invoicing-api:/app:ro
    networks:
      - internal-proxy

  logging-api:
    image: maanuelmm/logging-api-aos:latest
    restart: on-failure
    labels:
      - "traefik.enable=false"
    environment:
      - "DB_HOST=logging-db"
    depends_on:
      - logging-db
    networks:
      - internal-proxy

  logging-db:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.1
    container_name: logging-db # limited to one node to be reachable by the same hostname
    restart: on-failure
    labels:
      - "traefik.enable=false"
    environment:
      - "discovery.type=single-node" # https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
    volumes:
      - logging-db:/usr/share/elasticsearch/data
    networks:
      - internal-proxy

  orders-api:
    image: maanuelmm/prism:tini # custom image to avoid two bugs in two different versions
    command: mock -d -h 0.0.0.0 "/app/openapi.json"
    restart: on-failure # incredibly unreliable
    labels:
      - "traefik.enable=false"
    volumes:
      - ./specifications/orders-api:/app:ro
    networks:
      - internal-proxy

  products-api:
    image: maanuelmm/prism:tini # custom image to avoid two bugs in two different versions
    command: mock -d -h 0.0.0.0 "/app/openapi.yaml"
    restart: on-failure # incredibly unreliable
    labels:
      - "traefik.enable=false"
    volumes:
      - ./specifications/products-api:/app:ro
    networks:
      - internal-proxy

networks:
  external-proxy:
    internal: false
  internal-proxy:
    internal: true

volumes:
  logging-db:
